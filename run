#!/bin/bash
set -e

POSTGRESQL_USER=${POSTGRESQL_USER:-"docker"}
POSTGRESQL_PASS=${POSTGRESQL_PASS:-"docker"}
POSTGRESQL_DB=${POSTGRESQL_DB:-"docker"}
POSTGRESQL_TEMPLATE=${POSTGRESQL_TEMPLATE:-"DEFAULT"}

POSTGRESQL_BIN=/usr/lib/postgresql/9.1/bin/postgres
POSTGRESQL_CONFIG_FILE=/etc/postgresql/9.1/main/postgresql.conf
POSTGRESQL_DATA=/var/lib/postgresql/9.1/main

POSTGRESQL_SINGLE="sudo -u postgres $POSTGRESQL_BIN --single --config-file=$POSTGRESQL_CONFIG_FILE"

if [ ! -d $POSTGRESQL_DATA ]; then
    mkdir -p $POSTGRESQL_DATA
    chown -R postgres:postgres $POSTGRESQL_DATA
    sudo -u postgres /usr/lib/postgresql/9.1/bin/initdb -D $POSTGRESQL_DATA
    ln -s /etc/ssl/certs/ssl-cert-snakeoil.pem $POSTGRESQL_DATA/server.crt
    ln -s /etc/ssl/private/ssl-cert-snakeoil.key $POSTGRESQL_DATA/server.key
fi

TEMPLATE_POSTGIS_EXISTS=`$POSTGRESQL_SINGLE <<< "SELECT datname FROM pg_database;" | grep template_postgis | wc -l`
if [[ $TEMPLATE_POSTGIS_EXISTS == "0" ]]; then
    echo "Installing template_postgis"
    $POSTGRESQL_SINGLE <<< "CREATE DATABASE template_postgis;"
    $POSTGRESQL_SINGLE < /usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql 2>/dev/null 1>/dev/null
    $POSTGRESQL_SINGLE < /usr/share/postgresql/9.1/contrib/postgis-1.5/spatial_ref_sys.sql 2>/dev/null 1>/dev/null
fi

$POSTGRESQL_SINGLE <<< "CREATE USER $POSTGRESQL_USER WITH SUPERUSER;"
$POSTGRESQL_SINGLE <<< "ALTER USER $POSTGRESQL_USER WITH PASSWORD '$POSTGRESQL_PASS';"
$POSTGRESQL_SINGLE <<< "CREATE DATABASE $POSTGRESQL_DB OWNER $POSTGRESQL_USER TEMPLATE $POSTGRESQL_TEMPLATE;"

exec sudo -u postgres $POSTGRESQL_BIN --config-file=$POSTGRESQL_CONFIG_FILE

